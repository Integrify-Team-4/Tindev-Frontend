[{"/home/kirsi/Desktop/Tindev-Frontend/src/index.tsx":"1","/home/kirsi/Desktop/Tindev-Frontend/src/reportWebVitals.ts":"2","/home/kirsi/Desktop/Tindev-Frontend/src/App.tsx":"3","/home/kirsi/Desktop/Tindev-Frontend/src/components/NavBar.tsx":"4","/home/kirsi/Desktop/Tindev-Frontend/src/components/Footer.tsx":"5","/home/kirsi/Desktop/Tindev-Frontend/src/screens/Landing.tsx":"6","/home/kirsi/Desktop/Tindev-Frontend/src/screens/EmailVerification.tsx":"7"},{"size":500,"mtime":1608038363700,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1608038363700,"results":"10","hashOfConfig":"9"},{"size":617,"mtime":1608057699070,"results":"11","hashOfConfig":"9"},{"size":2019,"mtime":1608142881928,"results":"12","hashOfConfig":"9"},{"size":405,"mtime":1608073689682,"results":"13","hashOfConfig":"9"},{"size":146,"mtime":1608055704700,"results":"14","hashOfConfig":"9"},{"size":2316,"mtime":1608139339788,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"r34c69",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"/home/kirsi/Desktop/Tindev-Frontend/src/index.tsx",[],["32","33"],"/home/kirsi/Desktop/Tindev-Frontend/src/reportWebVitals.ts",[],"/home/kirsi/Desktop/Tindev-Frontend/src/App.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/components/NavBar.tsx",["34","35"],"/home/kirsi/Desktop/Tindev-Frontend/src/components/Footer.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/screens/Landing.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/screens/EmailVerification.tsx",["36","37"],"import React, { useState } from 'react'\nimport { Container, Button, Row, Col, Image } from 'react-bootstrap'\n\nimport img from '../images/woman-with-megaphon.png'\n\ntype SetCode = {\n  \n  first: any,\n  second: any, \n  third: any, \n  fourth: any,\n}\n\nconst EmailVerification = () => {\n  const [code, setCode] = useState({\n    first: '',\n    second: '',\n    third: '',\n    fourth: '',\n  })\n\n  const email = 'duy@abc.com'\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const {value, name} = e.currentTarget\n    console.log(value, name)\n    /* @ts-ignore */\n    setCode((prevValue: SetCode) => {\n      return {\n        ...prevValue, \n        [name]: value\n      }\n    })\n  }\n\n  const handleVerification = () => {\n    console.log('verified')\n  }\n\n  const handleResend = () => {\n    console.log('resend')\n  }\n\n  return (\n    <>\n    <Container>\n      <div className=\"text-center py-2\">\n        <h3 className=\"email-verify\">Email Verification</h3>\n        <p className=\"email\">Email verification for {email} </p>\n        <h4 className=\"check-out\">Please check out your mail and enter verification code:</h4>\n      </div>\n      <div className=\"verification text-center\">\n        <input name=\"first\" onChange={handleChange} value={code.first} className=\"verification-code\"></input>\n        <input name=\"second\" onChange={handleChange} value={code.second} className=\"verification-code\"></input>\n        <input name=\"third\" onChange={handleChange} value={code.third} className=\"verification-code\"></input>\n        <input name=\"fourth\" onChange={handleChange} value={code.fourth} className=\"verification-code\"></input>\n      </div>\n      <div className=\"bottom-section\">\n        <div className=\"verification text-center\">\n          <Button onClick={handleVerification} className=\"verification__button btn btn-dark btn-lg\">Send verification code</Button>\n        </div>\n        <div className=\"verification__resend-button text-center resend\">\n        <p className=\"new-code text-center\">Didn't receive the verification code?</p>\n          <Button onClick={handleResend} className=\"btn btn-light btn-lg\">Get new verification code</Button>\n        </div>\n        <Image src={`${img}`} fluid className=\"woman-behind-megaphon\"></Image>\n      </div>\n    </Container>\n    </>\n  )\n}\n\nexport default EmailVerification",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":21},{"ruleId":"42","severity":1,"message":"46","line":2,"column":23,"nodeType":"44","messageId":"45","endLine":2,"endColumn":34},{"ruleId":"42","severity":1,"message":"47","line":2,"column":29,"nodeType":"44","messageId":"45","endLine":2,"endColumn":32},{"ruleId":"42","severity":1,"message":"48","line":2,"column":34,"nodeType":"44","messageId":"45","endLine":2,"endColumn":37},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]