[{"/home/kirsi/Desktop/Tindev-Frontend/src/index.tsx":"1","/home/kirsi/Desktop/Tindev-Frontend/src/reportWebVitals.ts":"2","/home/kirsi/Desktop/Tindev-Frontend/src/App.tsx":"3","/home/kirsi/Desktop/Tindev-Frontend/src/pages/Landing/index.tsx":"4","/home/kirsi/Desktop/Tindev-Frontend/src/pages/Login/index.tsx":"5","/home/kirsi/Desktop/Tindev-Frontend/src/pages/Register/index.tsx":"6","/home/kirsi/Desktop/Tindev-Frontend/src/components/LandingBottom/index.tsx":"7","/home/kirsi/Desktop/Tindev-Frontend/src/components/CustomSvgIcon/index.tsx":"8","/home/kirsi/Desktop/Tindev-Frontend/src/components/LandingTop/index.tsx":"9","/home/kirsi/Desktop/Tindev-Frontend/src/components/HalfCircle/index.tsx":"10","/home/kirsi/Desktop/Tindev-Frontend/src/Routes.tsx":"11","/home/kirsi/Desktop/Tindev-Frontend/src/components/Footer/index.tsx":"12","/home/kirsi/Desktop/Tindev-Frontend/src/pages/EmailVerification/index.tsx":"13","/home/kirsi/Desktop/Tindev-Frontend/src/components/NavBar/index.tsx":"14","/home/kirsi/Desktop/Tindev-Frontend/src/components/Loader/index.tsx":"15","/home/kirsi/Desktop/Tindev-Frontend/src/pages/CompanyProfile/index.tsx":"16","/home/kirsi/Desktop/Tindev-Frontend/src/pages/CompanyMatchPage/index.tsx":"17"},{"size":552,"mtime":1608210661962,"results":"18","hashOfConfig":"19"},{"size":416,"mtime":1608210661962,"results":"20","hashOfConfig":"19"},{"size":205,"mtime":1608377469243,"results":"21","hashOfConfig":"19"},{"size":294,"mtime":1608377484319,"results":"22","hashOfConfig":"19"},{"size":2577,"mtime":1608291716909,"results":"23","hashOfConfig":"19"},{"size":324,"mtime":1608210661962,"results":"24","hashOfConfig":"19"},{"size":1375,"mtime":1608377410640,"results":"25","hashOfConfig":"19"},{"size":167,"mtime":1608224243698,"results":"26","hashOfConfig":"19"},{"size":977,"mtime":1608210661962,"results":"27","hashOfConfig":"19"},{"size":275,"mtime":1608210661958,"results":"28","hashOfConfig":"19"},{"size":629,"mtime":1608377529391,"results":"29","hashOfConfig":"19"},{"size":448,"mtime":1608377149646,"results":"30","hashOfConfig":"19"},{"size":2603,"mtime":1608241247907,"results":"31","hashOfConfig":"19"},{"size":1856,"mtime":1608253370329,"results":"32","hashOfConfig":"19"},{"size":383,"mtime":1608234999489,"results":"33","hashOfConfig":"19"},{"size":2308,"mtime":1608296876769,"results":"34","hashOfConfig":"19"},{"size":1490,"mtime":1608297710478,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"r34c69",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"/home/kirsi/Desktop/Tindev-Frontend/src/index.tsx",[],["75","76"],"/home/kirsi/Desktop/Tindev-Frontend/src/reportWebVitals.ts",[],"/home/kirsi/Desktop/Tindev-Frontend/src/App.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/pages/Landing/index.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/pages/Login/index.tsx",["77","78","79","80"],"import React, { useState, useEffect } from 'react'\n//import { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\n\nimport CustomSvgIcon from '../../components/CustomSvgIcon'\nimport starsLady from '../../media/standing-lady.svg'\nimport NavBar from '../../components/NavBar'\nimport Message from '../../components/Message'\nimport Loader from '../../components/Loader'\n//import { login } from '../../redux/actions/userActions'\nimport './Login.scss'\n\nconst Login = ({ history }: any) => {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\t//const dispatch = useDispatch()\n\n\t//const login = useSelector((state) => state.login)\n\t// const { loading, error, userInfo } = login\n\n\tconst userInfo = {email: 'duy@abc.com', password: '12345'}\n\tconst error = 'no no no'\n\tconst loading = false\n\t\n\t// useEffect(() => {\n\t// \tif (userInfo) {\n\t// \t\thistory.push(redirect)\n\t// \t}\n\t// }, [history, userInfo, redirect])\n\n\tconst submitHandler = (e: React.FormEvent) => {\n\t\te.preventDefault()\n\t\t// dispatch login(email, password)\n\t}\n\n\treturn (\n\t<div>\n\t\t<NavBar />\n\t\t<Container>\n\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t<Col xs={12} md={4}>\n\t\t\t\t\t<h2 className=\"signin\">Sign in to TinDev</h2>\n\t\t\t\t\t{/* {error && <Message variant=\"danger\">{error}</Message>} */}\n\t\t\t\t\t{loading && <Loader />}\n\t\t\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t\t\t<Form.Group controlId=\"email\">\n\t\t\t\t\t\t\t<Form.Label className=\"label\">EMAIL</Form.Label>\n\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\ttype=\"email\" \n\t\t\t\t\t\t\t\tplaceholder=\"Enter email\" \n\t\t\t\t\t\t\t\tvalue={email} \n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId=\"password\">\n\t\t\t\t\t\t\t<Form.Label className=\"label\">PASSWORD</Form.Label>\n\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\tplaceholder=\"Enter password\" \n\t\t\t\t\t\t\t\tvalue={password} \n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button type=\"submit\" className=\"signin-button\" variant=\"outline-dark my-2\">Login</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t\t<Row className=\"forgot-password\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t  <Link className=\"forgot-password\" to='/reset-password'>Forgot your password?</Link>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"new-user\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\tNew User? <Link className=\"register\" to='/register'>Register</Link>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t\t<CustomSvgIcon img={starsLady} />\n\t</div>\n\t)\n}\t\n\nexport default Login\n","/home/kirsi/Desktop/Tindev-Frontend/src/pages/Register/index.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/components/LandingBottom/index.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/components/CustomSvgIcon/index.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/components/LandingTop/index.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/components/HalfCircle/index.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/Routes.tsx",["81","82"],"/home/kirsi/Desktop/Tindev-Frontend/src/components/Footer/index.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/pages/EmailVerification/index.tsx",["83","84"],"import React, { useState } from 'react'\nimport { Container, Button, Image } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nimport img from '../images/woman-with-megaphon.png'\nimport CustomSvgIcon from '../../components/CustomSvgIcon'\nimport starsLady from '../../media/standing-lady.svg'\nimport './EmailVerification.scss'\n\ntype SetCode = {\n  \n  first: any,\n  second: any, \n  third: any, \n  fourth: any,\n}\n\nconst EmailVerification = () => {\n  const history = useHistory()\n  const [code, setCode] = useState({\n    first: '',\n    second: '',\n    third: '',\n    fourth: '',\n  })\n\n  const email = 'duy@abc.com'\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const {value, name} = e.currentTarget\n    console.log(value, name)\n    /* @ts-ignore */\n    setCode((prevValue: SetCode) => {\n      return {\n        ...prevValue, \n        [name]: value\n      }\n    })\n  }\n\n  const handleVerification = () => {\n    console.log('verified')\n    history.push('/login')\n  }\n\n  const handleResend = () => {\n    console.log('resend')\n  }\n\n  return (\n    <>\n    <Container>\n      <div className=\"text-center py-2\">\n        <h3 className=\"email-verify\">Email Verification</h3>\n        <p className=\"email\">Email verification for {email} </p>\n        <h4 className=\"check-out\">Please check out your mail and enter verification code:</h4>\n      </div>\n      <div className=\"verification text-center\">\n        <input name=\"first\" onChange={handleChange} value={code.first} className=\"verification-code\"></input>\n        <input name=\"second\" onChange={handleChange} value={code.second} className=\"verification-code\"></input>\n        <input name=\"third\" onChange={handleChange} value={code.third} className=\"verification-code\"></input>\n        <input name=\"fourth\" onChange={handleChange} value={code.fourth} className=\"verification-code\"></input>\n      </div>\n      <div className=\"bottom-section\">\n        <div className=\"verification text-center\">\n          <Button onClick={handleVerification} className=\"verification__button btn btn-dark btn-lg\">Send verification code</Button>\n        </div>\n        <div className=\"verification__resend-button text-center resend\">\n        <p className=\"new-code text-center\">Didn't receive the verification code?</p>\n          <Button onClick={handleResend} className=\"btn btn-light btn-lg\">Get new verification code</Button>\n        </div>\n        {/* <Image src={`${img}`} fluid className=\"woman-behind-megaphon\"></Image> */}\n      </div>\n    </Container>\n    <CustomSvgIcon img={starsLady} />\n    </>\n  )\n}\n\nexport default EmailVerification","/home/kirsi/Desktop/Tindev-Frontend/src/components/NavBar/index.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/components/Loader/index.tsx",[],"/home/kirsi/Desktop/Tindev-Frontend/src/pages/CompanyProfile/index.tsx",["85"],"import React from \"react\";\nimport { Form, Col, Row, Container, Button, Image } from \"react-bootstrap\";\n//import uploadImage from \"../../assets/images/upload-Image.png\";\nconst CompanyProfile = () => {\n  return (\n    <Container fluid=\"md\">\n      <h2 className=\"row justify-content-center\">Company Profile</h2>\n      <Row>\n        <Col xs>\n          <Form>\n            <Form.Group as={Row} controlId=\"formElement\">\n              <Form.Label column sm=\"4\">\n                Company Name\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" placeholder=\"Comapny Name\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formElement\">\n              <Form.Label column sm=\"4\">\n                Address\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" placeholder=\"Address\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formElement\">\n              <Form.Label column sm=\"4\">\n                Country\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" placeholder=\"Country\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formElement\">\n              <Form.Label column sm=\"4\">\n                city City\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" placeholder=\"Password\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm=\"4\">\n                WebSite\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"http://www.company.com\"\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n          <Button className=\"btn-form\"> Save</Button>\n        </Col>\n        <Col className=\"colcenter\">\n          {/* <Image src={uploadImage} /> <br /> */}\n          <Button className=\"btn-upload mt-4\">\n            <a href=\"http://www.google.com\">signup</a>\n            Upload\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default CompanyProfile;","/home/kirsi/Desktop/Tindev-Frontend/src/pages/CompanyMatchPage/index.tsx",["86","87","88","89","90","91"],"import * as React from \"react\";\nimport { Col, Row, Container, Button, Image, Badge } from \"react-bootstrap\";\n// import male from \"../../assets/images/male.png\";\nconst CompanyMatchPage = () => {\n  return (\n    <div className=\"Container\">\n      <div className=\"Row mb-2\">\n        {/* <div className=\"Col-md-2\"></div> */}\n        <div className=\"Col-md-12\">\n          <a href=\"#\" className=\"text-dark\">\n            <div className=\"card shadow\">\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-xs-1 col-sm-2 col-md-1 mr-3\">\n                    {/* <Image src={male} /> */}\n                    <br></br>\n                  </div>\n                  <div className=\"col-xs-8 col-sm-7 col-md-8\">\n                    <h5>Car System Alerts</h5>\n                    <p>Check the battery and alternator conditions</p>\n                    <Badge\n                      pill\n                      className=\"tag-btn btn btn-pill btn-outline-primary ml-2\"\n                    >\n                      JavaScript\n                    </Badge>\n                    <Badge\n                      pill\n                      className=\"tag-btn btn btn-pill btn-outline-primary ml-2\"\n                    >\n                      ReactJs\n                    </Badge>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CompanyMatchPage;",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"100","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":15},{"ruleId":"96","severity":1,"message":"101","line":23,"column":8,"nodeType":"98","messageId":"99","endLine":23,"endColumn":16},{"ruleId":"96","severity":1,"message":"102","line":24,"column":8,"nodeType":"98","messageId":"99","endLine":24,"endColumn":13},{"ruleId":"96","severity":1,"message":"103","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":22},{"ruleId":"96","severity":1,"message":"104","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":24},{"ruleId":"96","severity":1,"message":"105","line":2,"column":29,"nodeType":"98","messageId":"99","endLine":2,"endColumn":34},{"ruleId":"96","severity":1,"message":"106","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":11},{"ruleId":"96","severity":1,"message":"105","line":2,"column":45,"nodeType":"98","messageId":"99","endLine":2,"endColumn":50},{"ruleId":"96","severity":1,"message":"107","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":13},{"ruleId":"96","severity":1,"message":"108","line":2,"column":15,"nodeType":"98","messageId":"99","endLine":2,"endColumn":18},{"ruleId":"96","severity":1,"message":"109","line":2,"column":20,"nodeType":"98","messageId":"99","endLine":2,"endColumn":29},{"ruleId":"96","severity":1,"message":"110","line":2,"column":31,"nodeType":"98","messageId":"99","endLine":2,"endColumn":37},{"ruleId":"96","severity":1,"message":"105","line":2,"column":39,"nodeType":"98","messageId":"99","endLine":2,"endColumn":44},{"ruleId":"111","severity":1,"message":"112","line":10,"column":11,"nodeType":"113","endLine":10,"endColumn":45},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","'userInfo' is assigned a value but never used.","'error' is assigned a value but never used.","'CompanyProfile' is defined but never used.","'CompanyMatchPage' is defined but never used.","'Image' is defined but never used.","'img' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]